version: '3.1'
services:
  notification-eureka-server:
    container_name: notification-eureka-server
    build:
      context: ./notification-eureka-server
      dockerfile: Dockerfile
    networks:
      - notification-microservices
    ports:
      - "8761:8761"

  email-filtering-service:
    container_name: email-filtering-service
    build:
      context: ./email-filtering-service
      dockerfile: Dockerfile
    networks:
      - notification-microservices
    env_file:
      - ./email-filtering-service/.env
    environment:
      - eureka.client.service-url.defaultZone=http://notification-eureka-server:8761/eureka/
      - spring.profiles.active=docker
    ports:
      - "8082:8082"
    depends_on:
      - notification-eureka-server
      - db-email-filtering-service
    links:
      - db-email-filtering-service

  email-rest-client:
    container_name: email-rest-client
    build:
      context: ./email-rest-client
      dockerfile: Dockerfile
    networks:
      - notification-microservices
    env_file:
      - ./email-rest-client/.env
    environment:
      - eureka.client.service-url.defaultZone=http://notification-eureka-server:8761/eureka/
      - spring.profiles.active=docker
      - message.service=http://message-service:8083/msg/api
      - email.filtering.service=http://email-filtering-service:8082/filtering/api
    ports:
      - "8081:8081"
    depends_on:
      - notification-eureka-server
      - db-email-rest-client
      - email-filtering-service
      - message-service
    links:
      - db-email-rest-client

  message-service:
    container_name: message-service
    build:
      context: ./message-service
      dockerfile: Dockerfile
    networks:
      - notification-microservices
    env_file:
      - ./message-service/.env
    environment:
      - eureka.client.service-url.defaultZone=http://notification-eureka-server:8761/eureka/
      - spring.profiles.active=docker
    ports:
      - "8083:8083"
    depends_on:
      - db-message-service
      - email-filtering-service
      - notification-eureka-server
    links:
      - db-message-service

  notification-service:
    container_name: notification-service
    build:
      context: ./notification-service
      dockerfile: Dockerfile
    networks:
      - notification-microservices
    environment:
      - eureka.client.service-url.defaultZone=http://notification-eureka-server:8761/eureka/
    ports:
      - "8084:8084"
    depends_on:
      - message-service
      - notification-eureka-server

  notification-gateway:
    container_name: notification-gateway
    build:
      context: ./notification-gateway
      dockerfile: Dockerfile
    networks:
      - notification-microservices
    links:
      - notification-eureka-server
      - email-filtering-service
      - email-rest-client
      - message-service
    environment:
      - eureka.client.service-url.defaultZone=http://notification-eureka-server:8761/eureka/
    ports:
      - "8080:8080"
    depends_on:
      - notification-eureka-server
      - email-filtering-service
      - message-service
      - email-rest-client

  db-email-filtering-service:
    container_name: db-email-filtering-service
    image: postgres:14.0
    restart: always
    env_file:
      - ./email-filtering-service/.postgresql-env
    networks:
      - notification-microservices
    ports:
      - "5433:5432"
    volumes:
      - ./postgres-email-filtering-service:/var/lib/postgresql/data
      - ./email-filtering-service/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql

  db-email-rest-client:
    container_name: db-email-rest-client
    image: postgres:14.0
    restart: always
    env_file:
      - ./email-rest-client/.postgresql-env
    networks:
      - notification-microservices
    ports:
      - "5434:5432"
    volumes:
      - ./postgres-email-rest-client:/var/lib/postgresql/data
      - ./email-rest-client/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql

  db-message-service:
    container_name: db-message-service
    image: postgres:10.5
    restart: always
    env_file:
      - ./message-service/.postgresql-env
    networks:
      - notification-microservices
    ports:
      - "5435:5432"
    volumes:
      - ./postgres-message-service:/var/lib/postgresql/data
      - ./message-service/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql

networks:
  notification-microservices:
    driver: bridge